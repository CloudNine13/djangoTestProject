# Generated by Django 3.2.7 on 2021-09-24 15:21

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Video',
            fields=[
                ('ID', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('FileName', models.CharField(max_length=50)),
                ('FileSize', models.CharField(max_length=50)),
                ('FileUrl', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'videos',
            },
        ),
        migrations.CreateModel(
            name='ServiceUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='email')),
                ('username', models.CharField(max_length=30, unique=True, verbose_name='username')),
                ('password', models.CharField(max_length=120, verbose_name='password')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('subscription', models.CharField(choices=[('S', 'Subscribed'), ('N', 'Unsubscribed')], default='N', max_length=1, verbose_name='subscription')),
                ('stripeCustomerId', models.CharField(max_length=255, verbose_name='stripe user id')),
                ('stripeSubscriptionId', models.CharField(max_length=255, verbose_name='stripe subscription id')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'users',
            },
        ),
    ]
